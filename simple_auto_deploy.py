#!/usr/bin/env python3
"""
–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–ø–ª–æ–π –¥–ª—è EasyDrive –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
–¢–æ–ª—å–∫–æ git push –±–µ–∑ SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É
"""

import subprocess
import sys
import os
import time
from datetime import datetime
from watchdog.observers import Observer
from watchdog.events import FileSystemEventHandler

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
SERVER_HOST = "89.23.99.152"
SERVER_USER = "root"
SERVER_PASSWORD = "dJN.wJ-YM*+J9b"
SERVER_PATH = "/var/www/easydrive"

def run_command(command, cwd=None):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç"""
    try:
        result = subprocess.run(
            command, 
            shell=True, 
            cwd=cwd,
            capture_output=True, 
            text=True, 
            check=True
        )
        return True, result.stdout
    except subprocess.CalledProcessError as e:
        return False, e.stderr

def git_add_and_commit():
    """–î–æ–±–∞–≤–ª—è–µ—Ç –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ git –∏ —Å–æ–∑–¥–∞–µ—Ç –∫–æ–º–º–∏—Ç"""
    print("üìù –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ git...")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã
    success, output = run_command("git add .")
    if not success:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–æ–≤: {output}")
        return False
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–º–º–∏—Ç —Å —Ç–µ–∫—É—â–∏–º –≤—Ä–µ–º–µ–Ω–µ–º
    timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    commit_message = f"Auto-deploy: {timestamp}"
    
    success, output = run_command(f'git commit -m "{commit_message}"')
    if not success and "nothing to commit" not in output.lower():
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–º–º–∏—Ç–∞: {output}")
        return False
    
    print("‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ git")
    return True

def git_push():
    """–ü—É—à–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —É–¥–∞–ª–µ–Ω–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π"""
    print("üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ git...")
    
    success, output = run_command("git push origin main")
    if not success:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ push: {output}")
        return False
    
    print("‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ git")
    return True

def show_manual_instructions():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞"""
    print("\n" + "="*60)
    print("üìã –†–£–ß–ù–û–ï –û–ë–ù–û–í–õ–ï–ù–ò–ï –°–ï–†–í–ï–†–ê:")
    print("="*60)
    print("1. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ —Å–µ—Ä–≤–µ—Ä—É:")
    print(f"   ssh {SERVER_USER}@{SERVER_HOST}")
    print("2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞:")
    print(f"   cd {SERVER_PATH}")
    print("3. –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–¥:")
    print("   git pull origin main")
    print("4. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ nginx:")
    print("   sudo systemctl reload nginx")
    print("="*60)
    print(f"üîë –ü–∞—Ä–æ–ª—å –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {SERVER_PASSWORD}")
    print("="*60)

class DeployHandler(FileSystemEventHandler):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–µ–ø–ª–æ—è"""
    
    def __init__(self):
        self.last_deploy = 0
        self.deploy_delay = 3  # –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –¥–µ–ø–ª–æ—è–º–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
        self.ignored_extensions = {'.pyc', '.pyo', '.pyd', '.log', '.tmp', '.swp', '.DS_Store'}
        self.ignored_dirs = {'.git', '__pycache__', 'node_modules', '.vscode', '.idea'}
    
    def should_ignore(self, path):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω—É–∂–Ω–æ –ª–∏ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª"""
        # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–∫—Ä—ã—Ç—ã–µ —Ñ–∞–π–ª—ã –∏ –ø–∞–ø–∫–∏
        if any(part.startswith('.') for part in path.split(os.sep)):
            return True
        
        # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
        if any(path.endswith(ext) for ext in self.ignored_extensions):
            return True
        
        # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –ø–∞–ø–∫–∏
        if any(ignored_dir in path for ignored_dir in self.ignored_dirs):
            return True
        
        return False
    
    def on_modified(self, event):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤"""
        if event.is_directory:
            return
        
        if self.should_ignore(event.src_path):
            return
        
        current_time = time.time()
        if current_time - self.last_deploy < self.deploy_delay:
            return
        
        print(f"\nüìÅ –ò–∑–º–µ–Ω–µ–Ω —Ñ–∞–π–ª: {event.src_path}")
        print(f"‚è∞ –í—Ä–µ–º—è: {datetime.now().strftime('%H:%M:%S')}")
        
        self.last_deploy = current_time
        self.deploy()
    
    def on_created(self, event):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤"""
        if event.is_directory:
            return
        
        if self.should_ignore(event.src_path):
            return
        
        current_time = time.time()
        if current_time - self.last_deploy < self.deploy_delay:
            return
        
        print(f"\nüìÅ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: {event.src_path}")
        print(f"‚è∞ –í—Ä–µ–º—è: {datetime.now().strftime('%H:%M:%S')}")
        
        self.last_deploy = current_time
        self.deploy()
    
    def deploy(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –¥–µ–ø–ª–æ—è"""
        print("üöÄ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–µ–ø–ª–æ—è...")
        
        # Git –æ–ø–µ—Ä–∞—Ü–∏–∏
        if not git_add_and_commit():
            print("‚ö†Ô∏è –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞")
            return
        
        if not git_push():
            print("‚ùå –û—à–∏–±–∫–∞ git push")
            return
        
        print("‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        print("üí° –û–±–Ω–æ–≤–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä –≤—Ä—É—á–Ω—É—é –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏")
        show_manual_instructions()

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"""
    print("üëÄ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π...")
    print("üìÅ –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ —Ñ–∞–π–ª—ã: .html, .css, .js, .py (–∫—Ä–æ–º–µ —Å–ª—É–∂–µ–±–Ω—ã—Ö)")
    print("üîÑ –î–µ–ø–ª–æ–π –±—É–¥–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö")
    print("‚èπÔ∏è  –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
    print("-" * 60)
    
    # –°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π
    event_handler = DeployHandler()
    observer = Observer()
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ –∑–∞ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–µ–π
    observer.schedule(event_handler, ".", recursive=True)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ
    observer.start()
    
    try:
        while True:
            time.sleep(1)
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞...")
        observer.stop()
    
    observer.join()
    print("üëã –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

if __name__ == "__main__":
    main()
