#!/usr/bin/env python3
"""
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Ñ–∞–π–ª–æ–≤ –∏ –¥–µ–ø–ª–æ–π
–ó–∞–ø—É—Å–∫–∞–µ—Ç –¥–µ–ø–ª–æ–π –ø—Ä–∏ –∫–∞–∂–¥–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞
"""

import os
import time
import subprocess
from watchdog.observers import Observer
from watchdog.events import FileSystemEventHandler
from datetime import datetime

class DeployHandler(FileSystemEventHandler):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–µ–ø–ª–æ—è"""
    
    def __init__(self):
        self.last_deploy = 0
        self.deploy_delay = 5  # –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –¥–µ–ø–ª–æ—è–º–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
        self.ignored_extensions = {'.pyc', '.pyo', '.pyd', '.log', '.tmp', '.swp', '.DS_Store'}
        self.ignored_dirs = {'.git', '__pycache__', 'node_modules', '.vscode', '.idea'}
    
    def should_ignore(self, path):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω—É–∂–Ω–æ –ª–∏ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª"""
        # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–∫—Ä—ã—Ç—ã–µ —Ñ–∞–π–ª—ã –∏ –ø–∞–ø–∫–∏
        if any(part.startswith('.') for part in path.split(os.sep)):
            return True
        
        # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
        if any(path.endswith(ext) for ext in self.ignored_extensions):
            return True
        
        # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –ø–∞–ø–∫–∏
        if any(ignored_dir in path for ignored_dir in self.ignored_dirs):
            return True
        
        return False
    
    def on_modified(self, event):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤"""
        if event.is_directory:
            return
        
        if self.should_ignore(event.src_path):
            return
        
        current_time = time.time()
        if current_time - self.last_deploy < self.deploy_delay:
            return
        
        print(f"\nüìÅ –ò–∑–º–µ–Ω–µ–Ω —Ñ–∞–π–ª: {event.src_path}")
        print(f"‚è∞ –í—Ä–µ–º—è: {datetime.now().strftime('%H:%M:%S')}")
        
        self.last_deploy = current_time
        self.deploy()
    
    def deploy(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –¥–µ–ø–ª–æ—è"""
        print("üöÄ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–µ–ø–ª–æ—è...")
        try:
            result = subprocess.run([sys.executable, "deploy.py"], 
                                  capture_output=True, text=True, timeout=60)
            if result.returncode == 0:
                print("‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –¥–µ–ø–ª–æ—è: {result.stderr}")
        except subprocess.TimeoutExpired:
            print("‚è∞ –¢–∞–π–º–∞—É—Ç –¥–µ–ø–ª–æ—è")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –¥–µ–ø–ª–æ—è: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"""
    print("üëÄ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π...")
    print("üìÅ –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ —Ñ–∞–π–ª—ã: .html, .css, .js, .py (–∫—Ä–æ–º–µ —Å–ª—É–∂–µ–±–Ω—ã—Ö)")
    print("üîÑ –î–µ–ø–ª–æ–π –±—É–¥–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö")
    print("‚èπÔ∏è  –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
    print("-" * 60)
    
    # –°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π
    event_handler = DeployHandler()
    observer = Observer()
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ –∑–∞ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–µ–π
    observer.schedule(event_handler, ".", recursive=True)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ
    observer.start()
    
    try:
        while True:
            time.sleep(1)
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞...")
        observer.stop()
    
    observer.join()
    print("üëã –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

if __name__ == "__main__":
    import sys
    main()
