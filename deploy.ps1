# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç –¥–µ–ø–ª–æ—è –¥–ª—è EasyDrive –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (PowerShell)
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—É—à–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ git –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –∫–æ–¥ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ

param(
    [switch]$Auto = $false
)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–µ—Ä–≤–µ—Ä–∞
$SERVER_HOST = "89.23.99.152"
$SERVER_USER = "root"
$SERVER_PASSWORD = "dJN.wJ-YM*+J9b"
$SERVER_PATH = "/var/www/easydrive"

function Write-ColorOutput {
    param(
        [string]$Message,
        [string]$Color = "White"
    )
    Write-Host $Message -ForegroundColor $Color
}

function Run-Command {
    param(
        [string]$Command,
        [string]$WorkingDirectory = (Get-Location)
    )
    
    try {
        Write-ColorOutput "–í—ã–ø–æ–ª–Ω—è–µ–º: $Command" "Yellow"
        $result = Invoke-Expression $Command
        return $true, $result
    }
    catch {
        Write-ColorOutput "–û—à–∏–±–∫–∞: $($_.Exception.Message)" "Red"
        return $false, $_.Exception.Message
    }
}

function Git-AddAndCommit {
    Write-ColorOutput "üìù –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ git..." "Cyan"
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã
    $success, $output = Run-Command "git add ."
    if (-not $success) {
        Write-ColorOutput "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–æ–≤: $output" "Red"
        return $false
    }
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–º–º–∏—Ç —Å —Ç–µ–∫—É—â–∏–º –≤—Ä–µ–º–µ–Ω–µ–º
    $timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
    $commitMessage = "Auto-deploy: $timestamp"
    
    $success, $output = Run-Command "git commit -m `"$commitMessage`""
    if (-not $success -and $output -notlike "*nothing to commit*") {
        Write-ColorOutput "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–º–º–∏—Ç–∞: $output" "Red"
        return $false
    }
    
    Write-ColorOutput "‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ git" "Green"
    return $true
}

function Git-Push {
    Write-ColorOutput "üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ git..." "Cyan"
    
    $success, $output = Run-Command "git push origin main"
    if (-not $success) {
        Write-ColorOutput "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ push: $output" "Red"
        return $false
    }
    
    Write-ColorOutput "‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ git" "Green"
    return $true
}

function Update-Server {
    Write-ColorOutput "üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..." "Cyan"
    
    # –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    $commands = @(
        "cd $SERVER_PATH",
        "git pull origin main",
        "sudo systemctl reload nginx",
        "echo 'Deploy completed successfully'"
    )
    
    $sshCommand = "sshpass -p '$SERVER_PASSWORD' ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_HOST '$($commands -join ';')'"
    
    $success, $output = Run-Command $sshCommand
    if (-not $success) {
        Write-ColorOutput "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞: $output" "Red"
        return $false
    }
    
    Write-ColorOutput "‚úÖ –°–µ—Ä–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω" "Green"
    Write-ColorOutput "üìã –í—ã–≤–æ–¥ —Å–µ—Ä–≤–µ—Ä–∞: $output" "Gray"
    return $true
}

function Check-Sshpass {
    $success, $output = Run-Command "where.exe sshpass"
    if (-not $success) {
        Write-ColorOutput "‚ùå sshpass –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —á–µ—Ä–µ–∑ WSL –∏–ª–∏ Git Bash..." "Red"
        Write-ColorOutput "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ sshpass –≤ WSL: sudo apt-get install sshpass" "Yellow"
        return $false
    }
    return $true
}

function Start-AutoDeploy {
    Write-ColorOutput "üëÄ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π..." "Cyan"
    Write-ColorOutput "üìÅ –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ —Ñ–∞–π–ª—ã: .html, .css, .js, .py" "Gray"
    Write-ColorOutput "üîÑ –î–µ–ø–ª–æ–π –±—É–¥–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö" "Gray"
    Write-ColorOutput "‚èπÔ∏è  –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C" "Gray"
    Write-ColorOutput ("-" * 60) "Gray"
    
    # –ü—Ä–æ—Å—Ç–æ–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ñ–∞–π–ª–æ–≤
    $watcher = New-Object System.IO.FileSystemWatcher
    $watcher.Path = Get-Location
    $watcher.Filter = "*.*"
    $watcher.IncludeSubdirectories = $true
    $watcher.EnableRaisingEvents = $true
    
    $lastDeploy = 0
    $deployDelay = 5
    
    $action = {
        $path = $Event.SourceEventArgs.FullPath
        $changeType = $Event.SourceEventArgs.ChangeType
        $currentTime = Get-Date -Format "HH:mm:ss"
        
        # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–ª—É–∂–µ–±–Ω—ã–µ —Ñ–∞–π–ª—ã
        if ($path -match '\.(pyc|pyo|pyd|log|tmp|swp|DS_Store)$' -or 
            $path -match '\.git|__pycache__|node_modules|\.vscode|\.idea') {
            return
        }
        
        $now = [DateTime]::Now.Ticks / 10000000
        if ($now - $lastDeploy -lt $deployDelay) {
            return
        }
        
        Write-ColorOutput "`nüìÅ –ò–∑–º–µ–Ω–µ–Ω —Ñ–∞–π–ª: $path" "Yellow"
        Write-ColorOutput "‚è∞ –í—Ä–µ–º—è: $currentTime" "Gray"
        
        $script:lastDeploy = $now
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –¥–µ–ø–ª–æ–π
        Write-ColorOutput "üöÄ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–µ–ø–ª–æ—è..." "Cyan"
        & $PSCommandPath
    }
    
    Register-ObjectEvent -InputObject $watcher -EventName "Changed" -Action $action
    Register-ObjectEvent -InputObject $watcher -EventName "Created" -Action $action
    Register-ObjectEvent -InputObject $watcher -EventName "Modified" -Action $action
    
    try {
        while ($true) {
            Start-Sleep -Seconds 1
        }
    }
    finally {
        $watcher.Dispose()
        Get-EventSubscriber | Unregister-Event
    }
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
function Main {
    Write-ColorOutput "üöÄ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–µ–ø–ª–æ—è EasyDrive..." "Cyan"
    Write-ColorOutput "‚è∞ –í—Ä–µ–º—è: $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')" "Gray"
    Write-ColorOutput ("-" * 50) "Gray"
    
    if ($Auto) {
        Start-AutoDeploy
        return
    }
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º sshpass
    if (-not (Check-Sshpass)) {
        Write-ColorOutput "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ sshpass –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã" "Red"
        exit 1
    }
    
    # –≠—Ç–∞–ø 1: Git –æ–ø–µ—Ä–∞—Ü–∏–∏
    if (-not (Git-AddAndCommit)) {
        Write-ColorOutput "‚ö†Ô∏è –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞ –∏–ª–∏ –æ—à–∏–±–∫–∞ git" "Yellow"
        return
    }
    
    if (-not (Git-Push)) {
        exit 1
    }
    
    # –≠—Ç–∞–ø 2: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞
    if (-not (Update-Server)) {
        exit 1
    }
    
    Write-ColorOutput ("-" * 50) "Gray"
    Write-ColorOutput "üéâ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!" "Green"
    Write-ColorOutput "‚è∞ –í—Ä–µ–º—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')" "Gray"
}

# –ó–∞–ø—É—Å–∫
Main
