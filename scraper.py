import requests
import os
import time
from bs4 import BeautifulSoup
import re
from urllib.parse import urljoin, urlparse

def create_directories():
    """–°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏"""
    if not os.path.exists('images'):
        os.makedirs('images')
    if not os.path.exists('images/tickets'):
        os.makedirs('images/tickets')

def get_ticket_images(ticket_number):
    """–ü–æ–ª—É—á–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –±–∏–ª–µ—Ç–∞"""
    url = f"https://examenpdd.com/bilet/{ticket_number}"
    
    try:
        headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'
        }
        
        response = requests.get(url, headers=headers, timeout=10)
        response.raise_for_status()
        
        soup = BeautifulSoup(response.content, 'html.parser')
        
        # –ò—â–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–æ–≤
        images = []
        
        # –ò—â–µ–º –≤—Å–µ img —Ç–µ–≥–∏
        img_tags = soup.find_all('img')
        
        for img in img_tags:
            src = img.get('src')
            if src:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–∞
                if 'question' in src.lower() or 'bilet' in src.lower() or 'ticket' in src.lower():
                    full_url = urljoin(url, src)
                    images.append(full_url)
        
        # –¢–∞–∫–∂–µ –∏—â–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ data-src –∏–ª–∏ –¥—Ä—É–≥–∏—Ö –∞—Ç—Ä–∏–±—É—Ç–∞—Ö
        for img in soup.find_all('img', {'data-src': True}):
            src = img.get('data-src')
            if src and ('question' in src.lower() or 'bilet' in src.lower() or 'ticket' in src.lower()):
                full_url = urljoin(url, src)
                images.append(full_url)
        
        return images
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –±–∏–ª–µ—Ç–∞ {ticket_number}: {e}")
        return []

def download_image(url, filename):
    """–°–∫–∞—á–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"""
    try:
        headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'
        }
        
        response = requests.get(url, headers=headers, timeout=30)
        response.raise_for_status()
        
        with open(filename, 'wb') as f:
            f.write(response.content)
        
        print(f"‚úì –°–∫–∞—á–∞–Ω–æ: {filename}")
        return True
        
    except Exception as e:
        print(f"‚úó –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è {url}: {e}")
        return False

def get_file_extension(url):
    """–ü–æ–ª—É—á–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –∏–∑ URL"""
    parsed = urlparse(url)
    path = parsed.path
    if '.' in path:
        return path.split('.')[-1].lower()
    return 'jpg'  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é jpg

def scrape_all_tickets():
    """–ü–∞—Ä—Å–∏–º –≤—Å–µ –±–∏–ª–µ—Ç—ã"""
    create_directories()
    
    print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å examenpdd.com")
    print("=" * 50)
    
    total_images = 0
    successful_tickets = 0
    
    for ticket_num in range(1, 41):  # –ë–∏–ª–µ—Ç—ã —Å 1 –ø–æ 40
        print(f"\nüìã –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –±–∏–ª–µ—Ç {ticket_num}...")
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –±–∏–ª–µ—Ç–∞
        images = get_ticket_images(ticket_num)
        
        if not images:
            print(f"‚ö†Ô∏è  –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –±–∏–ª–µ—Ç–∞ {ticket_num} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            continue
        
        print(f"üì∏ –ù–∞–π–¥–µ–Ω–æ {len(images)} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
        
        # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –±–∏–ª–µ—Ç–∞
        ticket_dir = f"images/tickets/ticket_{ticket_num:02d}"
        if not os.path.exists(ticket_dir):
            os.makedirs(ticket_dir)
        
        # –°–∫–∞—á–∏–≤–∞–µ–º –∫–∞–∂–¥–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        for i, img_url in enumerate(images, 1):
            ext = get_file_extension(img_url)
            filename = f"{ticket_dir}/question_{i:02d}.{ext}"
            
            if download_image(img_url, filename):
                total_images += 1
        
        successful_tickets += 1
        
        # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
        time.sleep(1)
    
    print("\n" + "=" * 50)
    print(f"‚úÖ –ü–∞—Ä—Å–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω!")
    print(f"üìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –±–∏–ª–µ—Ç–æ–≤: {successful_tickets}/40")
    print(f"üñºÔ∏è  –°–∫–∞—á–∞–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {total_images}")
    print(f"üìÅ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ø–∞–ø–∫–µ: images/tickets/")

def create_image_mapping():
    """–°–æ–∑–¥–∞–µ–º –º–∞–ø–ø–∏–Ω–≥ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏"""
    mapping = {}
    
    for ticket_num in range(1, 41):
        ticket_dir = f"images/tickets/ticket_{ticket_num:02d}"
        if os.path.exists(ticket_dir):
            images = []
            for file in sorted(os.listdir(ticket_dir)):
                if file.lower().endswith(('.jpg', '.jpeg', '.png', '.gif', '.svg')):
                    images.append(f"images/tickets/ticket_{ticket_num:02d}/{file}")
            
            if images:
                mapping[ticket_num] = images
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –º–∞–ø–ø–∏–Ω–≥ –≤ JSON —Ñ–∞–π–ª
    import json
    with open('image_mapping.json', 'w', encoding='utf-8') as f:
        json.dump(mapping, f, ensure_ascii=False, indent=2)
    
    print(f"üìù –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª –º–∞–ø–ø–∏–Ω–≥–∞: image_mapping.json")
    return mapping

if __name__ == "__main__":
    print("üîç –ü–∞—Ä—Å–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å examenpdd.com")
    print("‚ö†Ô∏è  –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ")
    print("‚è±Ô∏è  –ü—Ä–æ—Ü–µ—Å—Å –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç...")
    
    input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")
    
    # –ü–∞—Ä—Å–∏–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    scrape_all_tickets()
    
    # –°–æ–∑–¥–∞–µ–º –º–∞–ø–ø–∏–Ω–≥
    print("\nüìã –°–æ–∑–¥–∞–µ–º –º–∞–ø–ø–∏–Ω–≥ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...")
    mapping = create_image_mapping()
    
    print("\nüéâ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å –Ω–æ–≤—ã–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏.")








